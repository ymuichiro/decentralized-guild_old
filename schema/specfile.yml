openapi: 3.0.3
info:
  title: Decentralized Guild
  description: |-
    About Decentralized Guild System APIs. Please use it when expanding the system.
  contact:
    email: ym.u.ichiro@gmail.com
  license:
    name: MIT
    url: https://github.com/ymuichiro/decentralized-guild/blob/main/LICENSE
  version: 0.0.1
externalDocs:
  description: Find out more about Decentralized Guild
  url: https://github.com/ymuichiro/decentralized-guild
servers:
  - url: http://localhost:3001/api
tags:
  - name: user
    description: add, info, isRegist
  - name: quest
    description: add, list, info, order, approval
  - name: guild-quest
    description: add, list, info
  - name: guild
    description: create, info, join
  - name: notice
    description: notice for a user
paths:
  /user:
    get:
      tags:
        - user
      summary: get user
      operationId: getUser
      parameters:
        - in: query
          name: public_key
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    nullable: true
                    allOf:
                      - $ref: "#/components/schemas/UserTable"
    post:
      tags:
        - user
      summary: add user
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
  /users:
    get:
      tags:
        - user
      summary: get users list
      operationId: getUsers
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserTable"
  /quest:
    get:
      tags:
        - quest
      summary: get quest
      operationId: getQuest
      parameters:
        - in: query
          name: public_key
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    nullable: true
                    allOf:
                      - $ref: "#/components/schemas/QuestTable"
    post:
      tags:
        - quest
      summary: add quest
      operationId: addQuest
      requestBody:
        required: true
        description: to blank transaction_hash, transaction_hash
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Quest"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/QuestTable"
  /quests:
    get:
      tags:
        - quest
      summary: get quest list
      operationId: getQuests
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/QuestTable"
  /guild/quest:
    get:
      tags:
        - guild-quest
      summary: get guild quest
      operationId: getGuildQuest
      parameters:
        - in: query
          name: quest_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    nullable: true
                    allOf:
                      - $ref: "#/components/schemas/QuestTable"
    post:
      tags:
        - guild-quest
      summary: add guild quest
      operationId: addGuildQuest
      requestBody:
        required: true
        description: to blank transaction_hash, transaction_hash
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Quest"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/QuestTable"
  /guild/quests:
    get:
      tags:
        - guild-quest
      summary: get guild quest list
      operationId: getGuildQuests
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/QuestTable"
  /guild:
    get:
      tags:
        - guild
      summary: get guild
      operationId: getGuild
      parameters:
        - in: query
          name: guild_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    nullable: true
                    allOf:
                      - $ref: "#/components/schemas/GuildTable"
    post:
      tags:
        - guild
      summary: add guild
      operationId: addGuild
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Guild"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/GuildTable"
  /guilds:
    get:
      tags:
        - guild
      summary: get guild list
      operationId: getGuilds
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/GuildTable"
  /notices:
    get:
      tags:
        - notice
      summary: get notice list for user
      operationId: getNotices
      parameters:
        - in: query
          name: public_key
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Notice"
components:
  schemas:
    User:
      type: object
      required:
        - public_key
        - name
        - icon
      properties:
        public_key:
          type: string
        name:
          type: string
        icon:
          type: string
          description: base64 encoding
    UserTable:
      allOf:
        - $ref: "#/components/schemas/User"
        - type: object
          required:
            - created
          properties:
            created:
              type: number
              description: new Date().getTime()
    Quest:
      type: object
      required:
        - quest_id
        - nominate_guild_id
        - transaction_hash
        - title
        - description
        - reward
        - requester_public_key
        - worker_public_key
        - status
      properties:
        quest_id:
          type: number
        nominate_guild_id:
          type: string
        transaction_hash:
          type: string
        title:
          type: string
        description:
          type: string
        reward:
          type: number
        requester_public_key:
          type: string
        worker_public_key:
          type: string
        status:
          type: string
          enum:
            - WANTED
            - WORKING
            - COMPLETED
    QuestTable:
      allOf:
        - $ref: "#/components/schemas/Quest"
        - type: object
          required:
            - quest_id
            - created
          properties:
            quest_id:
              type: string
            created:
              type: number
              description: new Date().getTime()
    Notice:
      type: object
      required:
        - title
        - body
        - public_key
        - created
      properties:
        title:
          type: string
        body:
          type: string
        public_key:
          type: string
        created:
          type: number
          description: new Date().getTime()
    Guild:
      type: object
      required:
        - public_key
        - name
        - icon
      properties:
        public_key:
          type: string
        name:
          type: string
        icon:
          type: string
          description: base64 encoding
    GuildTable:
      allOf:
        - $ref: "#/components/schemas/Guild"
        - type: object
          required:
            - guild_id
            - created
          properties:
            guild_id:
              type: number
            created:
              type: number
              description: new Date().getTime()
